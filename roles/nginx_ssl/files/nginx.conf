user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {}

http {
log_format json_analytics escape=json '{'
'"uri": "$uri", ' # cleaned uri
'"msec": "$msec", ' # request unixtime in seconds with a milliseconds resolution
'"connection": "$connection", ' # connection serial number
'"connection_requests": "$connection_requests", ' # number of requests made in connection
'"pid": "$pid", ' # process pid
'"request_id": "$request_id", ' # the unique request id
'"request_length": "$request_length", ' # request length (including headers and body)
'"remote_addr": "$remote_addr", ' # client IP
'"remote_user": "$remote_user", ' # client HTTP username
'"remote_port": "$remote_port", ' # client port
'"time_local": "$time_local", '
'"time_iso8601": "$time_iso8601", ' # local time in the ISO 8601 standard format
'"request": "$request", ' # full path no arguments if the request
'"request_uri": "$request_uri", ' # full path and arguments if the request
'"args": "$args", ' # args
'"status": "$status", ' # response status code
'"body_bytes_sent": "$body_bytes_sent", ' # the number of body bytes exclude headers sent to a client
'"bytes_sent": "$bytes_sent", ' # the number of bytes sent to a client
'"http_referer": "$http_referer", ' # HTTP referer
'"http_user_agent": "$http_user_agent", ' # user agent
'"http_x_forwarded_for": "$http_x_forwarded_for", ' # http_x_forwarded_for
'"http_host": "$http_host", ' # the request Host: header
'"server_name": "$server_name", ' # the name of the vhost serving the request
'"request_time": "$request_time", ' # request processing time in seconds with msec resolution
'"upstream": "$upstream_addr", ' # upstream backend server for proxied requests
'"upstream_connect_time": "$upstream_connect_time", ' # upstream handshake time incl. TLS
'"upstream_header_time": "$upstream_header_time", ' # time spent receiving upstream headers
'"upstream_response_time": "$upstream_response_time", ' # time spent receiving upstream body
'"upstream_response_length": "$upstream_response_length", ' # upstream response length
'"upstream_cache_status": "$upstream_cache_status", ' # cache HIT/MISS where applicable
'"ssl_protocol": "$ssl_protocol", ' # TLS protocol
'"ssl_cipher": "$ssl_cipher", ' # TLS cipher
'"scheme": "$scheme", ' # http or https
'"request_method": "$request_method", ' # request method
'"server_protocol": "$server_protocol", ' # request protocol, like HTTP/1.1 or HTTP/2.0
'"pipe": "$pipe", ' # "p" if request was pipelined, "." otherwise
'"gzip_ratio": "$gzip_ratio"'
'}';

access_log /var/log/nginx/json_access.log json_analytics;

    server {
  listen 127.0.0.1:9000;
listen 172.17.0.1:9000;

  server_name localhost;

  location /stub_status {
    stub_status on;
    # Optionally restrict access to IP addresses if needed
    # allow 127.0.0.1;
    # deny all;
  }
}


    # For websocket upgrades
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name _;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server
    server {

        listen 443 ssl;
        server_name product-research.cd-commerce.cloud;


        # SSL
        ssl_certificate /etc/letsencrypt/live/product-research.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/product-research.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth {
            internal;
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location = /auth_401 {
            if ($auth_redirect) {
                return 302 $auth_redirect;
            }
            return 401;
        }
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name auth.cd-commerce.cloud;

        # SSL
        ssl_certificate /etc/letsencrypt/live/auth.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/auth.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server
    server {

        listen 443 ssl;
        server_name cogs.cd-commerce.cloud;


        # SSL
        ssl_certificate /etc/letsencrypt/live/cogs.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cogs.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location = /health {
            proxy_pass http://127.0.0.1:10000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:10000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /api/health {
            proxy_pass http://127.0.0.1:10001/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:10001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /postgrest/health {
            proxy_pass http://127.0.0.1:10003/ready;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /postgrest/ {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:10002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth {
            internal;
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location = /auth_401 {
            if ($auth_redirect) {
                return 302 $auth_redirect;
            }
            return 401;
        }
    }

    server {
        listen 443 ssl;
        server_name additional-niche-data.cd-commerce.cloud;

        # SSL
        ssl_certificate /etc/letsencrypt/live/additional-niche-data.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/additional-niche-data.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            proxy_pass http://127.0.0.1:10100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name niche-analysis.cd-commerce.cloud;

        # SSL
        ssl_certificate /etc/letsencrypt/live/niche-analysis.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/niche-analysis.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Reverse proxy to local server
        location / {
            proxy_pass http://127.0.0.1:10101;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server
    server {

        listen 443 ssl;
        server_name reviews.cd-commerce.cloud;


        # SSL
        ssl_certificate /etc/letsencrypt/live/reviews.cd-commerce.cloud/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/reviews.cd-commerce.cloud/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        location = /health {
            proxy_pass http://127.0.0.1:10200/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            auth_request /auth;
            auth_request_set $auth_redirect $upstream_http_location;
            error_page 401 = /auth_401;
            proxy_pass http://127.0.0.1:10200;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /auth {
            internal;
            proxy_pass http://127.0.0.1:6000;
            proxy_set_header Host $host;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        location = /auth_401 {
            if ($auth_redirect) {
                return 302 $auth_redirect;
            }
            return 401;
        }
    }
}